### Day 4
Assignment | Topic | Materials
---- | ---- | ----
7. | Play time! Use these code segments indvidually to learn about the behavior of translate(), rotate() and scale() – replace A,B,C and D with various values and try to understand the results! `fill(255,0,0); ellipse(100,100,50,50); translate(A,B); ellipse(100,100,50,50); translate(C,D); ellipse(100,100,50,50); angleMode = "degrees"; fill(255,0,0); translate(200,200); ellipse(100,100,50,50); rotate(A); ellipse(100,100,50,50); angleMode = "degrees"; fill(255,0,0); translate(200,200); ellipse(100,100,50,50); scale(B, C); ellipse(100,100,50,50);`
8. | Now, try to use rotate() and scale() together. Add for loop & random fill color, then adjust the angle – that will take you to artistic creations shown below! Video: Drawing Bonus: Rotation! www.khanacademy.org/cs/drawing-bonus-rotation/906448125 Warning: Sometimes, browsers’ default setting of degrees vs. radians is unpredictable. You may want to add a line angleMode = "degrees"; to the top of your program if you want the angles to be specified in degrees. Also, you can use the following line to use radians instead (note: 360 degrees = 2 * PI radians): angleMode = "radians"; This setting affects the behavior of rotate(), sin(), cos(), tan(), etc.
9. | Artistic creations including rotating & shrinking squares/ellipses – change the angle within rotate() and see the wonders! translate() is used to move (0,0) to the center so that we can see all quadrants, as we do the rotations. scale() is used to change the size gradually ... `noStroke(); translate(200,200); for (var i = 500; i > 0; i--) { fill(i * 7 % 256, i * 17 % 256, i * 13 % 256); rect(0,0,400,400); scale(0.99,0.99); rotate(5); } noStroke(); translate(200,200); for (var i = 500; i > 0; i--) { fill(i * 7 % 256, i * 17 % 256, i * 13 % 256); rect(0,0,400,400); scale(0.99,0.99); rotate(30); }` Discussion: You can see colors become bolder, but why they change suddenly? `noStroke(); translate(200,200); for (var i = 0; i <16 ; i++) { fill(random(0,255), random(0,255), random(0,255)); ellipse(50,100,50,200); rotate(23); } noStroke(); translate(200,200); for (var i = 50; i > 0; i--) { fill(random(0,255),random(0,255), random(0,255)); rect(-200,-200,400,400); scale(0.9,0.9); rotate(5); } noStroke(); translate(200,200); for (var i = 500; i > 0; i--) { fill(sin(i*2)*128+128, sin(4*i)*128+128, sin(7*i)*128+128); rect(0,0,400,400); scale(0.99,0.99); rotate(16); } Discussion: Why color change is smooth for the previous one, bit more abrupt for the next one? noStroke(); translate(200,200); for (var i = 500; i > 0; i--) { fill(sin(i*5)*128+128, sin(12*i)*128+128, sin(17*i)*128+128); ellipse(200,200,400,400); scale(0.99,0.99); rotate(5); } noStroke(); translate(200,200); for (var i = 1000; i > 0; i--) { fill(sin(i*2)*128+128, sin(4*i)*128+128, sin(6*i)*128+128); ellipse(200,200,100,400); scale(0.995,0.995); rotate(24); } noStroke(); translate(200,200); for (var i = 500; i > 0; i--) { fill(random(0,255), random(0,255), random(0,255)); ellipse(200,200,400,400); scale(0.93,0.93); rotate(63); }` | ![pattern3](http://www.utdallas.edu/~veerasam/kajs/index_files/image028.jpg)
10. |  Rotating and shrinking triangles – you have seen the examples using ellipses and rectangles. Try the same using triangles.
11. | Functions: Circle of rockets! `noStroke(); var drawRacket = function() { fill(255, 0, 102); triangle(150,0,200,-40,200,40); fill(0, 255, 9); rect(125,-25,50,50); fill(9, 0, 255); triangle(125,-25,125,25,100,0); }; translate(200,200); var n = 12; for(var i=0; i<n ; i++) { rotate(360/n); drawRacket(); }` Discussion: How will you write this code if we cannot define a new function?\
12. | Circle of rockets! `noStroke(); var drawRacket = function() { fill(255, 0, 102); triangle(150,0,200,-40,200,40); fill(0, 255, 9); rect(125,-25,50,50); fill(9, 0, 255); triangle(125,-25,125,25,100,0); }; translate(200,200); var n = 12; for(var i=0; i<n ; i++) { rotate(360/n); drawRacket(); }` Discussion: How will you write this code if we cannot define a new function? | ![images](http://www.utdallas.edu/~veerasam/kajs/index_files/image050.jpg)
13. | Circle of cars - make them face each other: scale(-1,1) can make it reflect across y axis. Here is the start-up code to draw one car! Functions bring modularity to the programs and we can invoke them any # of times wherever we want. `var drawCar = function() { noStroke(); // draw the car body fill(255, 0, 115); rect(90, 0, 100, 20); rect(105, -28, 70, 40); // draw the wheels fill(77, 66, 66); ellipse(115, 21, 24, 24); ellipse(165, 21, 24, 24); }; translate(0,100); drawCar();` Discussion: How will you write this code if we cannot define a new function? | ![images](http://www.utdallas.edu/~veerasam/kajs/index_files/image054.jpg)
